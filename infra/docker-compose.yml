version: '3.8'

services:
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_db:/var/lib/postgresql/data/
    env_file:
      - ./.env

  redis:
    image: redis:alpine
    container_name: redis

  server:
    build:
      context: ../redmine_telegram_bot/.
      dockerfile: Dockerfile
    entrypoint: ./server-entrypoint.sh
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    env_file:
      - ./.env
    depends_on:
      - db
      - redis

  celery:
    build:
      context: ../redmine_telegram_bot/.
      dockerfile: Dockerfile
    entrypoint: ./worker-entrypoint.sh
    restart: always
    volumes:
      - .:/app/celery
    env_file:
      - ./.env
    depends_on:
      - server
      - redis

  celery-beat:
    build:
      context: ../redmine_telegram_bot/.
      dockerfile: Dockerfile
    entrypoint: ./beat-entrypoint.sh
    restart: always
    volumes:
      - .:/app/celery_beat
    env_file:
      - ./.env
    depends_on:
      - celery
      - server
      - redis

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  nginx:
    image: nginx:1.19.3
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - static_value:/usr/share/nginx/html/server/static/
      - media_value:/usr/share/nginx/html/server/media/
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - server
      - redis
      - celery
      - celery-beat

volumes:
  postgres_db:
  static_value:
  media_value:
