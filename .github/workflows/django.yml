name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        cd redmine_telegram_bot
        python -m pip install --upgrade pip
        pip install -r requirements.txt
  
  build_and_push_to_docker_hub:
    name: Push Docker backend image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: redmine_telegram_bot/.
          push: true
          tags: mikhailkas/redmine_telegram_bot:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:          
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd redmine_telegram_bot
            sudo docker-compose stop
            sudo docker-compose rm server
            sudo docker-compose rm celery
            sudo docker-compose rm celery-beat
            sudo docker pull mikhailkas/redmine_telegram_bot
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >>  .env
            echo DB_NAME=${{ secrets.DB_NAME }} >>  .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >>  .env
            echo DB_HOST=${{ secrets.DB_HOST }} >>  .env
            echo DB_PORT=${{ secrets.DB_PORT }} >>  .env
            echo REDIS_URL=${{ secrets.REDIS_URL }} >>  .env
            echo TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }} >>  .env
            echo ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }} >>  .env
            echo ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} >>  .env
            echo ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }} >>  .env
            echo REDMINE_URL=${{ secrets.REDMINE_URL }} >>  .env
            echo REDMINE_TOKEN=${{ secrets.REDMINE_TOKEN }} >>  .env
            echo REDMINE_TIME_ENTRIES_ENDPOINT=${{ secrets.REDMINE_TIME_ENTRIES_ENDPOINT }} >>  .env
            echo REDMINE_GROUPS_ENDPOINT=${{ secrets.REDMINE_GROUPS_ENDPOINT }} >>  .env
            sudo docker-compose up -d
            curl https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/setWebhook?url=${{ secrets.WEBHOOK_URL }}
